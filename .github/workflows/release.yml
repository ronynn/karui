name: Android APK Build

on:
  push:
    tags:
      - '*' # Triggers on any tag push

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    env:
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Clean Build Directory
        run: rm -rf app/build

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Setup Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > keystore.jks

      - name: Verify Keystore File
        run: |
          if [ -s "keystore.jks" ]; then
            echo "Keystore file exists and is non-empty."
          else
            echo "Keystore file is missing or empty!" && exit 1
          fi

      - name: Build Release APK
        run: |
          ./gradlew clean assembleRelease

      - name: List APK Outputs
        run: find app/build/outputs/apk -type f -name "*.apk"

      - name: Upload APK Artifact (Release)
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk